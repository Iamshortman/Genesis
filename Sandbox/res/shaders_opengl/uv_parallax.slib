//uv_parallax.slib
vec2 ParallaxMapping(sampler2D depth_map, vec2 tex_coords, vec3 view_dir, float height_scale)
{
    float height = texture(depth_map, tex_coords).r;    
    vec2 p = view_dir.xy * (height * height_scale) / view_dir.z;
    return tex_coords - p; 
}

vec2 calcUV()
{
	vec3 view_direction = normalize(environment.camera_position - frag_world_pos);
	view_direction = transpose(frag_tangent_space) * view_direction;
	return ParallaxMapping(material_textures[2], frag_uv, view_direction, material.pbr_values.w);
}