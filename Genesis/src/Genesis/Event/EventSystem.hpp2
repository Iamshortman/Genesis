#pragma once

#include "Genesis/Core/DLL.hpp"
#include "Genesis/Core/Types.hpp"

#include <memory>

namespace Genesis
{
	class GENESIS_DLL EventSystem
	{
	public:
		EventSystem();
		~EventSystem();

		template<class T>
		void addEventCallback(void(*)() callback_func)
		{
			//Class code in the hashnap
			size_t hashcode = typeid(T).hash_code();

			this->event_callbacks[hashcode]->push_back((void(*)(void*)) callback_func);
		};

	protected:
		map<size_t, vector<void(*)(void*)>>* event_callbacks;
	};
};